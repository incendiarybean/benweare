[{"G:\\Dev\\website\\src\\index.js":"1","G:\\Dev\\website\\src\\reportWebVitals.js":"2","G:\\Dev\\website\\src\\App.js":"3","G:\\Dev\\website\\src\\components\\index.js":"4","G:\\Dev\\website\\src\\components\\index.jsx":"5","G:\\Dev\\website\\src\\JS\\index.js":"6","G:\\Dev\\website\\src\\components\\addons\\footer\\index.jsx":"7","G:\\Dev\\website\\src\\components\\addons\\nav\\index.jsx":"8"},{"size":500,"mtime":1609864102768,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"10"},{"size":1326,"mtime":1609874891390,"results":"12","hashOfConfig":"10"},{"size":168,"mtime":1609869465099,"results":"13","hashOfConfig":"10"},{"size":4571,"mtime":1609874663235,"results":"14","hashOfConfig":"10"},{"size":951,"mtime":1609869269598,"results":"15","hashOfConfig":"10"},{"size":821,"mtime":1609870762198,"results":"16","hashOfConfig":"10"},{"size":5421,"mtime":1609873245517,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1muuqet",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},"G:\\Dev\\website\\src\\index.js",[],["36","37"],"G:\\Dev\\website\\src\\reportWebVitals.js",[],"G:\\Dev\\website\\src\\App.js",[],"G:\\Dev\\website\\src\\components\\index.js",[],"G:\\Dev\\website\\src\\components\\index.jsx",[],"G:\\Dev\\website\\src\\JS\\index.js",[],"G:\\Dev\\website\\src\\components\\addons\\footer\\index.jsx",[],"G:\\Dev\\website\\src\\components\\addons\\nav\\index.jsx",["38","39"],"import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Component(){\r\n\r\n    useEffect(() => {\r\n        const initTheme = () => {\r\n            if(!window.localStorage.getItem('theme') || !window.localStorage.getItem('colour')){\r\n                if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {\r\n                    window.localStorage.setItem('theme', 'dark');\r\n                    window.localStorage.setItem('theme', 'blue');\r\n                    document.getElementById('root').classList.add(`theme-dark`, `accent-blue`);\r\n                    document.getElementById('toggle').checked = true;\r\n                } else {\r\n                    window.localStorage.setItem('theme', 'light');\r\n                    window.localStorage.setItem('colour', 'purple');\r\n                    document.getElementById('root').classList.add(`theme-light`, `accent-purple`);\r\n                    document.getElementById('toggle').checked = false;\r\n                }\r\n            } else {\r\n                let theme = window.localStorage;\r\n                document.getElementById('root').classList.add(`theme-${theme.theme}`);\r\n                if(theme.colour === 'null' && theme.theme === 'light') theme.colour = 'purple';\r\n                if(theme.colour === 'null' && theme.theme === 'dark') theme.colour = 'blue';\r\n                document.getElementById('root').classList.add(`accent-${theme.colour}`);\r\n                if (theme.theme === 'dark') document.getElementById('toggle').checked = true;\r\n                if(!document.getElementById(`set-${theme.colour}`)) return;\r\n                document.getElementById(`set-${theme.colour}`).classList.add('border-2');\r\n            }\r\n\r\n            window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', (e) => {\r\n                const newColorScheme = e.matches ? 'dark' : 'light';\r\n                document.getElementById('root').classList.remove('theme-light', 'theme-dark');\r\n                window.localStorage.setItem('theme', `${newColorScheme}`);\r\n                document.getElementById('root').classList.add(`theme-${newColorScheme}`);\r\n            });\r\n\r\n            let dropdowns = document.querySelectorAll('.started-container');\r\n            for(let drop in dropdowns){\r\n                drop = dropdowns[drop];\r\n                if(typeof(drop)!== 'object') return;\r\n                drop.addEventListener('mouseover', () => {\r\n                    drop.children[1].style.display = 'block';\r\n                });\r\n                drop.addEventListener('mouseleave', () => {\r\n                    drop.children[1].style.display = 'none';\r\n                });\r\n            }\r\n            return true;\r\n        };\r\n        initTheme();\r\n    }, [])\r\n\r\n    const setTheme = () => {\r\n        let prev = window.localStorage.getItem('theme');\r\n        switch(prev){\r\n            case 'light':\r\n                window.localStorage.setItem('theme', 'dark');\r\n                document.getElementById('root').classList.remove('theme-light', 'theme-dark');\r\n                return document.getElementById('root').classList.add('theme-dark');\r\n            case 'dark':\r\n                window.localStorage.setItem('theme', 'light');\r\n                document.getElementById('root').classList.remove('theme-light', 'theme-dark');\r\n                return document.getElementById('root').classList.add('theme-light');\r\n            default:\r\n                window.localStorage.setItem('theme', 'light');\r\n                document.getElementById('root').classList.remove(`theme-dark`, `theme-light`);\r\n                return document.getElementById('root').classList.add(`theme-light`);\r\n        }\r\n    }\r\n\r\n    const menu = () => {\r\n        let links = document.querySelectorAll('.linklist');\r\n        for(let link in links) {\r\n            let item = links[link];\r\n            if(typeof(item) === 'object'){\r\n                item.classList.remove('animate__fadeIn', 'animate__fadeOut');\r\n                if(item.classList.contains('hidden')){\r\n                    return item.classList.toggle('hidden', false);\r\n                } else {\r\n                    return item.classList.toggle('hidden', true);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return(\r\n        <nav className='hidden md:flex sticky max-h-full top-0 z-30 items-center justify-between flex-wrap bg-primary border-accent border-b-4 shadow-lg'>\r\n            <div className='text-default w-full lg:h-full block flex flex-col flex-grow lg:flex-row lg:items-center justify-end text-left lg:w-auto'>\r\n                <div className='w-full md:w-36 flex justify-around p-4 items-center rounded-b items-center'>\r\n                    <p className=\"w-4\">ðŸŒž</p>\r\n                    <div className='relative inline-block w-10 align-middle select-none transition duration-200 ease-in'>\r\n                        <input type='checkbox' onClick={setTheme} name='toggle' id='toggle' className='toggle-checkbox absolute block w-6 h-6 rounded-full bg-white border-4 appearance-none cursor-pointer'/>\r\n                        <label htmlFor='toggle' className='toggle-label block overflow-hidden h-6 rounded-full bg-gray-300 cursor-pointer'></label>\r\n                    </div>\r\n                    <p className=\"w-4\">ðŸŒ‘</p>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n\r\n}\r\n\r\nexport default Component;",{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":2,"column":10,"nodeType":"46","messageId":"47","endLine":2,"endColumn":14},{"ruleId":"44","severity":1,"message":"48","line":72,"column":11,"nodeType":"46","messageId":"47","endLine":72,"endColumn":15},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'menu' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]